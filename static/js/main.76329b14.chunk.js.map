{"version":3,"sources":["store/selectors/ui.js","store/selectors/users.js","store/actions/users.js","store/actions/ui.js","components/Block/Block.js","components/Post/Post.js","containers/Content/Content.js","components/UserCard/UserCard.js","containers/Users/Users.js","App.js","store/reducers/ui.js","store/reducers/users.js","store/reducers/index.js","store/sagas/ui.js","axios/users.js","axios/posts.js","axios/albums.js","services/user.service.js","store/sagas/users.js","store/sagas/index.js","configureStore.js","index.js"],"names":["getIsOnLine","createSelector","state","ui","uiState","isOnline","usersState","users","getUsers","getSelectedUser","selectedUser","getIsUsersLoading","isUsersLoading","getPosts","posts","getAlbums","albums","getIsContentLoading","isContentLoading","getShowing","showing","getViewedUsers","viewedUsers","getUsersEdge","usersEdge","getUsersByIds","ids","filter","user","includes","id","USERS_GET_USER_ALBUMS_REQUEST","USERS_GET_USER_ALBUMS_SUCCESS","USERS_GET_USER_ALBUMS_FAIL","USERS_GET_USER_POSTS_REQUEST","USERS_GET_USER_POSTS_SUCCESS","USERS_GET_USER_POSTS_FAIL","USERS_CLEAR_CONTENT","getAllUsersSuccess","type","payload","getAllUsersFail","usersSetSelecteduser","usersGetUserAlbumsSuccess","usersGetUserAlbumsFail","usersGetUserPostsSuccess","usersGetUserPostsFail","usersSetShowing","uiSetIsOnline","Block","style","position","left","right","top","bottom","background","zIndex","Post","post","title","body","Card","className","Content","header","description","connect","isOnLine","dispatch","usersClearContent","_","Segment","Button","onClick","icon","Icon","name","Dimmer","active","inverted","Loader","map","i","key","Group","itemsPerRow","album","color","Description","UserCard","username","email","address","street","suite","city","zipcode","phone","company","cName","catchPhrase","disabled","onPosts","onAlbums","Header","Meta","extra","bind","basic","getAllUsersRequest","usersGetUserPostsRequest","usersGetUserAlbumsRequest","usersOnPageCount","useState","pageUsers","setPageUsers","totalPages","setTotalPages","usersOnPage","setUsersOnPage","activePage","setActivePage","useEffect","length","parseInt","offset","res","slice","opacity","Pagination","secondary","pointing","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","onPageChange","data","index","Dropdown","onChange","value","onPageCountChange","selection","floating","options","text","handePosts","handeAlbums","App","Container","columns","Grid","Row","Column","width","initialState","uiReducer","usersReducer","actionsTypes","indexOf","combineReducers","watchIsOnline","showErrorLoadingPostsNotification","showErrorLoadingAlbumsNotification","showSuccessLoadingPostsNotification","showSuccessLoadingAlbumsNotification","showThreeUsersNotification","uiSaga","isOnlineSourceChannel","eventChannel","emit","callbackIsOnline","callbackIsoffline","window","addEventListener","removeEventListener","call","chan","take","put","toast","size","select","names","u","join","time","all","Axios","create","baseURL","UserService","get","then","userPosts","userAlbums","getUserPosts","getUserAlbums","usersSaga","getAllusers","console","error","action","existedPosts","fork","task","cancel","existedAlbums","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","reducer","composeWithDevTools","applyMiddleware","configureStore","run","AppBundle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76329b14.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const uiState = state => state.ui\n\nexport const getIsOnLine = createSelector(\n  uiState,\n  uiState => uiState.isOnline\n)","import { createSelector } from 'reselect'\n\nexport const usersState = state => state.users\n\nexport const getUsers = createSelector(\n  usersState,\n  usersState => usersState.users\n)\n\nexport const getSelectedUser= createSelector(\n  usersState,\n  usersState => usersState.selectedUser\n)\n\nexport const getIsUsersLoading= createSelector(\n  usersState,\n  usersState => usersState.isUsersLoading\n)\n\nexport const getPosts= createSelector(\n  usersState,\n  usersState => usersState.posts\n)\n\nexport const getAlbums= createSelector(\n  usersState,\n  usersState => usersState.albums\n)\n\nexport const getIsContentLoading= createSelector(\n  usersState,\n  usersState => usersState.isContentLoading\n)\n\nexport const getShowing= createSelector(\n  usersState,\n  usersState => usersState.showing\n)\n\nexport const getViewedUsers= createSelector(\n  usersState,\n  usersState => usersState.viewedUsers\n)\n\nexport const getUsersEdge= createSelector(\n  usersState,\n  usersState => usersState.usersEdge\n)\n\nexport const getUsersByIds = createSelector(\n  [getUsers, getViewedUsers],\n  (users, ids) => users.filter(user => ids.includes(user.id))\n)\n\n\n","export const USERS_GET_ALL_USERS_REQUEST = 'USERS_GET_ALL_USERS_REQUEST'\nexport const USERS_GET_ALL_USERS_SUCCESS = 'USERS_GET_ALL_USERS_SUCCESS'\nexport const USERS_GET_ALL_USERS_FAIL = 'USERS_GET_ALL_USERS_FAIL'\nexport const USERS_SET_SELECTED_USER = 'USERS_SET_SELECTED_USER'\nexport const USERS_CLEAR_SELECTED_USER = 'USERS_CLEAR_SELECTED_USER'\nexport const USERS_GET_USER_ALBUMS_REQUEST = 'USERS_GET_USER_ALBUMS_REQUEST'\nexport const USERS_GET_USER_ALBUMS_SUCCESS = 'USERS_GET_USER_ALBUMS_SUCCESS'\nexport const USERS_GET_USER_ALBUMS_FAIL = 'USERS_GET_USER_ALBUMS_FAIL'\nexport const USERS_GET_USER_POSTS_REQUEST = 'USERS_GET_USER_POSTS_REQUEST'\nexport const USERS_GET_USER_POSTS_SUCCESS = 'USERS_GET_USER_POSTS_SUCCESS'\nexport const USERS_GET_USER_POSTS_FAIL = 'USERS_GET_USER_POSTS_FAIL'\nexport const USERS_CLEAR_CONTENT = 'USERS_CLEAR_CONTENT'\nexport const USERS_SET_SHOWING = 'USERS_SET_SHOWING'\n\nexport const getAllUsersRequest = () => ({\n  type: USERS_GET_ALL_USERS_REQUEST\n})\n\nexport const getAllUsersSuccess = (users) => ({\n  type: USERS_GET_ALL_USERS_SUCCESS,\n  payload: { users }\n})\n\nexport const getAllUsersFail = () => ({\n  type: USERS_GET_ALL_USERS_FAIL\n})\n\nexport const usersSetSelecteduser = (id) => ({\n  type: USERS_SET_SELECTED_USER,\n  payload: { id }\n})\n\nexport const usersClearSelecteduser = () => ({\n  type: USERS_CLEAR_SELECTED_USER\n})\n\nexport const usersGetUserAlbumsRequest = (id) => ({\n  type: USERS_GET_USER_ALBUMS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserAlbumsSuccess = (albums) => ({\n  type: USERS_GET_USER_ALBUMS_SUCCESS,\n  payload: { albums }\n})\n\nexport const usersGetUserAlbumsFail = () => ({\n  type: USERS_GET_USER_ALBUMS_FAIL\n})\n\nexport const usersGetUserPostsRequest = (id) => ({\n  type: USERS_GET_USER_POSTS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserPostsSuccess = (posts) => ({\n  type: USERS_GET_USER_POSTS_SUCCESS,\n  payload: { posts }\n})\n\nexport const usersGetUserPostsFail = () => ({\n  type: USERS_GET_USER_POSTS_FAIL\n})\n\nexport const usersClearContent = () => ({\n  type: USERS_CLEAR_CONTENT\n})\n\nexport const usersSetShowing = (type) => ({\n  type: USERS_SET_SHOWING,\n  payload: { type }\n})\n\n\n\n","export const UI_SET_IS_ONLINE = 'UI_SET_IS_ONLINE'\n\nexport const uiSetIsOnline = (isOnline) => ({\n  type: UI_SET_IS_ONLINE,\n  payload: { isOnline }\n})\n\n","import React from 'react'\n\nconst Block = () => {\n  return (\n    <div style={{\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      background: '#cccccc2e',\n      zIndex: 9999,\n    }}></div>\n  )\n}\n\nexport default Block\n","import { Card } from 'semantic-ui-react'\nimport React from 'react'\n\nconst Post = ({post: {title, body}}) => {\n  return (\n    <Card className=\"full-width\">\n      <Card.Content header={title} />\n      <Card.Content description={body} />\n    </Card>\n  )\n}\n\nexport default Post\n","import './Content.css'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Icon,\n  Loader,\n  Segment\n} from 'semantic-ui-react'\nimport {\n  getAlbums,\n  getIsContentLoading,\n  getIsOnLine,\n  getPosts,\n  getSelectedUser,\n  getShowing\n} from '../../store/selectors'\nimport {\n  usersClearContent,\n  usersSetSelecteduser,\n  usersSetShowing\n} from '../../store/actions'\n\nimport Block from '../../components/Block/Block'\nimport Post from '../../components/Post/Post'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Content = ({\n  albums,\n  isContentLoading,\n  isOnLine,\n  posts,\n  selectedUser,\n  showing,\n  usersClearContent,\n  usersSetSelecteduser,\n  usersSetShowing,\n}) => {\n  const handleOnClose = () => {\n    usersClearContent()\n    usersSetSelecteduser(null)\n    usersSetShowing(null)\n  }\n  return (\n    <>\n      {selectedUser && <Segment className=\"content full-height\">\n        {!isOnLine && <Block />}\n        <div className=\"content__header\">\n          <Button onClick={handleOnClose} icon>\n            <Icon name='times' />\n          </Button>\n        </div>\n\n        <div className=\"content__inner\">\n\n          {isContentLoading && <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>}\n\n          {!isContentLoading && showing === 'posts' && <div className=\"content__info\">\n            {posts.map((post, i) => <Post post={post} key={i} />)}\n          </div>}\n\n          {!isContentLoading && showing === 'albums' && <Card.Group itemsPerRow={4}>\n            {albums.map((album, i) => <Card key={i} color='green'>\n              <Card.Content>\n                <Card.Description>\n                  {album.title}\n                </Card.Description>\n              </Card.Content>\n            </Card>)}\n          </Card.Group>}\n\n        </div>\n      </Segment>}\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  selectedUser: getSelectedUser(state),\n  posts: getPosts(state),\n  albums: getAlbums(state),\n  isContentLoading: getIsContentLoading(state),\n  showing: getShowing(state),\n  isOnLine: getIsOnLine(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersClearContent: _ => dispatch(usersClearContent()),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Content)\n","import { Button, Card } from 'semantic-ui-react'\n\nimport React from 'react'\n\nconst UserCard = ({\n  user: {\n    id,\n    name, username, email,\n    address: {\n      street,\n      suite,\n      city,\n      zipcode\n    },\n    phone,\n    company: {\n      name: cName,\n      catchPhrase,\n    }\n  },\n  disabled,\n  onPosts= () => {},\n  onAlbums = () => {}\n}) => {\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>{username}</Card.Meta>\n        <Card.Meta>{email}</Card.Meta>\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${street} ${suite} ${city} ${zipcode}`}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Phone</Card.Meta>\n          {phone}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${cName}: ${catchPhrase} `}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button disabled={disabled} onClick={onPosts.bind(null, id)} basic color='green'>\n            Posts\n          </Button>\n          <Button disabled={disabled} onClick={onAlbums.bind(null, id)} basic color='green'>\n            Albums\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default UserCard\n","import './Users.css';\n\nimport { Card, Dimmer, Dropdown, Loader, Pagination } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { getAllUsersRequest, usersGetUserAlbumsRequest, usersGetUserPostsRequest, usersSetSelecteduser, usersSetShowing } from '../../store/actions'\nimport { getIsUsersLoading, getSelectedUser, getUsers } from '../../store/selectors/users'\n\nimport Block from '../../components/Block/Block';\nimport UserCard from '../../components/UserCard/UserCard'\nimport { connect } from 'react-redux'\nimport { getIsOnLine } from '../../store/selectors';\n\nconst Users = ({\n  getAllUsersRequest,\n  isUsersLoading,\n  selectedUser,\n  users,\n  usersGetUserAlbumsRequest,\n  usersGetUserPostsRequest,\n  usersOnPageCount,\n  usersSetSelecteduser,\n  usersSetShowing,\n  isOnLine,\n}) => {\n  const [pageUsers, setPageUsers] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n  const [usersOnPage, setUsersOnPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n\n  const onPageChange = index => {\n    setActivePage(index)\n  }\n\n  const onPageCountChange = value => {\n    setUsersOnPage(parseInt(value))\n  }\n\n  const handePosts = id => {\n    usersSetSelecteduser(id)\n    usersGetUserPostsRequest(id)\n    usersSetShowing('posts')\n  }\n\n  const handeAlbums = id => {\n    usersSetSelecteduser(id)\n    usersGetUserAlbumsRequest(id)\n    usersSetShowing('albums')\n  }\n\n  useEffect(() => {\n    const isIntegerCount = users.length % usersOnPage === 0\n    const totalPages = isIntegerCount ? users.length / usersOnPage : parseInt(users.length / usersOnPage) + 1\n    users.length && usersOnPage && setTotalPages(totalPages)\n  }, [setTotalPages, usersOnPage, users])\n\n  useEffect(() => {\n    if (totalPages && users.length) {\n      if (activePage > totalPages) {\n        setActivePage(totalPages)\n      } else {\n        const offset = usersOnPage * (activePage - 1)\n        const res = users.slice(offset, offset + usersOnPage)\n        res.length && setPageUsers(res)\n      }\n    }\n  }, [users, usersOnPage, activePage, totalPages])\n\n  useEffect(() => {\n    getAllUsersRequest()\n  }, [getAllUsersRequest])\n\n  useEffect(() => {\n    setUsersOnPage(usersOnPageCount)\n  }, [usersOnPageCount])\n\n  return (\n    <div className=\"users\">\n      {!isOnLine && <Block />}\n      <div className=\"users__pagination\" style={{\n        opacity: !pageUsers.length ? 0 : 1,\n      }}>\n        <Pagination\n          secondary\n          pointing\n          disabled={!!selectedUser}\n          boundaryRange={0}\n          activePage={activePage}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={totalPages}\n          onPageChange={(_, data) => onPageChange(data.activePage)}\n        />\n        <Dropdown\n          disabled={!!selectedUser}\n          onChange={(_, {value}) => onPageCountChange(value)}\n          selection\n          floating\n          value={usersOnPage}\n          options={[\n            {\n              key: 2,\n              text: '2',\n              value: 2\n            },\n            {\n              key: 3,\n              text: '3',\n              value: 3\n            },\n            {\n              key: 4,\n              text: '4',\n              value: 4\n            },\n          ]}\n        />\n      </div>\n      <div className=\"users__inner\">\n        {isUsersLoading}\n        <div className={\"users__container \" + (isUsersLoading && \"users__container_loaded\")}>\n          <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>\n        </div>\n\n        <Card.Group className={\"users__container \" + (!isUsersLoading && \"users__container_loaded\")}>\n          {pageUsers.length > 0 && pageUsers.map((user, i) => {\n            return (\n              <UserCard\n                disabled={selectedUser && user.id !== selectedUser}\n                onPosts={id => handePosts(id)}\n                onAlbums={id => handeAlbums(id)}\n                key={i}\n                user={user}\n              />\n            )\n          })}\n        </Card.Group>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  selectedUser: getSelectedUser(state),\n  isUsersLoading: getIsUsersLoading(state),\n  isOnLine: getIsOnLine(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getAllUsersRequest: _ => dispatch(getAllUsersRequest()),\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersGetUserPostsRequest: id => dispatch(usersGetUserPostsRequest(id)),\n  usersGetUserAlbumsRequest: id => dispatch(usersGetUserAlbumsRequest(id)),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n","import './App.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport Content from './containers/Content/Content';\nimport React from 'react';\nimport { SemanticToastContainer } from 'react-semantic-toasts';\nimport Users from './containers/Users/Users';\n\nfunction App() {\n  return (\n    <>\n      <Container className=\"full-height\" columns={2}>\n        <Grid className=\"full-height\">\n          <Grid.Row className=\"full-height\">\n            <Grid.Column className=\"full-height\" width={6}>\n              <Users usersOnPageCount={3} />\n            </Grid.Column>\n            <Grid.Column className=\"full-height\" width={10}>\n              <Content />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <SemanticToastContainer position=\"bottom-right\" />\n    </>\n  );\n}\n\nexport default App;\n","import * as actionsTypes from '../actions';\n\nconst initialState = {\n  isOnline: true\n}\n\nconst uiReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case actionsTypes.UI_SET_IS_ONLINE: {\n      const { isOnline } = payload\n      return {\n        ...state,\n        isOnline\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default uiReducer","import * as actionsTypes from '../actions';\n\nconst initialState = {\n  albums: [],\n  isContentLoading: false,\n  isUsersLoading: true,\n  posts: [],\n  selectedUser: null,\n  users: [],\n  showing: null,\n  viewedUsers: [],\n  usersEdge: 3\n}\n\nconst usersReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case actionsTypes.USERS_GET_ALL_USERS_REQUEST: {\n      return {\n        ...state,\n        isUsersLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_SUCCESS: {\n      const { users } = payload\n      return {\n        ...state,\n        users,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_FAIL: {\n      return {\n        ...state,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_SET_SELECTED_USER: {\n      const { id } = payload\n\n      return {\n        ...state,\n        selectedUser: id,\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_SELECTED_USER: {\n      return {\n        ...state,\n        selectedUser: null\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_REQUEST:\n    case actionsTypes.USERS_GET_USER_POSTS_REQUEST: {\n      return {\n        ...state,\n        isContentLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_FAIL:\n    case actionsTypes.USERS_GET_USER_ALBUMS_FAIL: {\n      return {\n        ...state,\n        isContentLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_SUCCESS: {\n      const { viewedUsers, selectedUser } = state\n      return {\n        ...state,\n        isContentLoading: false,\n        posts: payload.posts,\n        viewedUsers: (selectedUser && viewedUsers.indexOf(selectedUser) === -1)\n          ? [...viewedUsers, selectedUser]\n          : viewedUsers\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_SUCCESS: {\n      const { viewedUsers, selectedUser } = state\n      return {\n        ...state,\n        isContentLoading: false,\n        albums: payload.albums,\n        viewedUsers: (selectedUser && viewedUsers.indexOf(selectedUser) === -1)\n          ? [...viewedUsers, selectedUser]\n          : viewedUsers\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_CONTENT: {\n      return {\n        ...state,\n        albums: [],\n        posts: []\n      }\n    }\n\n    case actionsTypes.USERS_SET_SHOWING: {\n      return {\n        ...state,\n        showing: payload.type\n      }\n    }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer","import { combineReducers } from 'redux'\nimport uiReducer from './ui'\nimport usersReducer from './users'\n\nexport default combineReducers({\n  ui: uiReducer,\n  users: usersReducer\n})","import {\n  USERS_GET_USER_ALBUMS_FAIL,\n  USERS_GET_USER_ALBUMS_REQUEST,\n  USERS_GET_USER_ALBUMS_SUCCESS,\n  USERS_GET_USER_POSTS_FAIL,\n  USERS_GET_USER_POSTS_REQUEST,\n  USERS_GET_USER_POSTS_SUCCESS\n} from '../actions/users'\nimport { all, call, put, select, take } from 'redux-saga/effects'\nimport { getAlbums, getPosts, getUsersByIds, getUsersEdge, getViewedUsers } from '../selectors/users'\n\nimport React from 'react'\nimport { eventChannel } from 'redux-saga'\nimport { toast } from 'react-semantic-toasts';\nimport { uiSetIsOnline } from '../actions'\n\nfunction isOnlineSourceChannel() {\n  return eventChannel((emit) => {\n    const callbackIsOnline = function () {\n      emit(true)\n    }\n    const callbackIsoffline = function () {\n      emit(false)\n    }\n    window.addEventListener(\"online\", callbackIsOnline)\n    window.addEventListener(\"offline\", callbackIsoffline)\n\n    return () => {\n      window.removeEventListener(\"online\", callbackIsOnline)\n      window.removeEventListener(\"offline\", callbackIsoffline)\n    }\n  })\n}\n\nfunction* watchIsOnline() {\n  const chan = yield call(isOnlineSourceChannel)\n  while (true) {\n    const isOnline = yield take(chan)\n    yield put(uiSetIsOnline(isOnline))\n\n    if (isOnline) {\n      toast({\n        title: 'Now you are online!!',\n        description: <p>Take a chance to do somethins awesome!</p>,\n        size: 'small',\n      })\n    } else {\n      toast({\n        title: 'Now you are offline (:',\n        description: <p>Take a rest. Sure, soon you will be able to do somethig awesome!</p>,\n        size: 'small',\n        type: 'warning',\n      }, () => { }, () => { }, () => { })\n    }\n  }\n}\n\nfunction* showErrorLoadingPostsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_POSTS_FAIL)\n\n    toast({\n      title: 'Error loading posts',\n      description: <p>This is a Semantic UI toast</p>,\n      size: 'small',\n      type: 'warning',\n    })\n  }\n}\n\nfunction* showErrorLoadingAlbumsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_ALBUMS_FAIL)\n\n    toast({\n      title: 'Error loading albums',\n      description: <p>This is a Semantic UI toast</p>,\n      size: 'small',\n      type: 'warning',\n    })\n  }\n}\n\nfunction* showSuccessLoadingPostsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_POSTS_REQUEST)\n    const posts = yield select(getPosts)\n\n    if (!posts.length) {\n      yield take(USERS_GET_USER_POSTS_SUCCESS)\n      toast({\n        title: 'Posts loaded successfull',\n        description: <p>This is a Semantic UI toast</p>,\n        size: 'small'\n      })\n    }\n  }\n}\n\nfunction* showSuccessLoadingAlbumsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_ALBUMS_REQUEST)\n    const ablums = yield select(getAlbums)\n\n    if (!ablums.length) {\n      yield take(USERS_GET_USER_ALBUMS_SUCCESS)\n      toast({\n        title: 'Ablums loaded successfull',\n        description: <p>This is a Semantic UI toast</p>,\n        size: 'small'\n      })\n    }\n  }\n}\n\nfunction* showThreeUsersNotification() {\n  while (true) {\n    yield take([USERS_GET_USER_POSTS_SUCCESS, USERS_GET_USER_ALBUMS_SUCCESS])\n    const viewedUsers = yield select(getViewedUsers)\n    const usersEdge = yield select(getUsersEdge)\n\n    if (viewedUsers.length === usersEdge) {\n      const users = yield select(getUsersByIds)\n      const names = users.map(u => u.name)\n      \n      toast({\n        title: 'Congratulatin! You have shown three users!',\n        description: <p>Users: {names.join(', ')}</p>,\n        size: 'massive',\n        time: 3000\n      })\n    }\n  }\n}\n\nexport default function* uiSaga() {\n  yield all([\n    watchIsOnline(),\n    showErrorLoadingPostsNotification(),\n    showSuccessLoadingPostsNotification(),\n    showErrorLoadingAlbumsNotification(),\n    showSuccessLoadingAlbumsNotification(),\n    showThreeUsersNotification()\n  ])\n}","import Axios from 'axios'\n\nexport const users = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/users'\n})    ","import Axios from 'axios'\n\nexport const posts = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts'\n})    ","import Axios from 'axios'\n\nexport const albums = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/albums'\n})    ","import { albums, posts, users } from '../axios'\n\nclass UserService {\n\n  static getAllusers() {\n    return users.get().then(({ data }) => data)\n  }\n\n  static getUserPosts(id) {\n    return posts.get(`?userId=${id}`).then(({ data }) => data)\n  }\n\n  static getUserAlbums(id) {\n    return albums.get(`?userId=${id}`).then(({ data }) => data)\n  }\n}\n\nexport default UserService","import {\n  USERS_CLEAR_CONTENT,\n  USERS_GET_USER_ALBUMS_REQUEST,\n  USERS_GET_USER_POSTS_REQUEST,\n  getAllUsersFail,\n  getAllUsersSuccess,\n  usersGetUserAlbumsFail,\n  usersGetUserAlbumsSuccess,\n  usersGetUserPostsFail,\n  usersGetUserPostsSuccess\n} from '../actions/users'\nimport {\n  all,\n  call,\n  cancel,\n  fork,\n  put,\n  select,\n  take,\n  takeEvery\n} from 'redux-saga/effects'\nimport { getAlbums, getPosts } from '../selectors/users'\n\nimport UserService from '../../services/user.service'\n\nexport function* getUsers() {\n  try {\n    const users = yield call(UserService.getAllusers)\n    yield put(getAllUsersSuccess(users))\n  } catch (error) {\n    yield put(getAllUsersFail())\n  }\n}\n\nexport function* userPosts(id) {\n  try {\n    const posts = yield call(UserService.getUserPosts, id)\n    yield put(usersGetUserPostsSuccess(posts))\n  } catch (error) {\n    console.error(error)\n    yield put(usersGetUserPostsFail())\n  }\n}\n\nexport function* userAlbums(id) {\n  try {\n    const albums = yield call(UserService.getUserAlbums, id)\n    yield put(usersGetUserAlbumsSuccess(albums))\n  } catch (error) {\n    console.error(error)\n    yield put(usersGetUserAlbumsFail())\n  }\n}\n\nexport function* getUserPosts(action) {\n  const existedPosts = yield select(getPosts)\n\n  if (existedPosts.length) {\n    return yield put(usersGetUserPostsSuccess(existedPosts))\n  }\n\n  const { id } = action.payload\n  const task = yield fork(userPosts, id)\n  yield take([USERS_GET_USER_ALBUMS_REQUEST, USERS_CLEAR_CONTENT])\n  yield cancel(task)\n}\n\nexport function* getUserAlbums(action) {\n  const existedAlbums = yield select(getAlbums)\n\n  if (existedAlbums.length) {\n    return yield put(usersGetUserAlbumsSuccess(existedAlbums))\n  }\n\n  const { id } = action.payload\n  const task = yield fork(userAlbums, id)\n  yield take([USERS_GET_USER_ALBUMS_REQUEST, USERS_CLEAR_CONTENT])\n  yield cancel(task)\n}\n\nexport default function* usersSaga() {\n  yield all([\n    yield takeEvery('USERS_GET_ALL_USERS_REQUEST', getUsers),\n    yield takeEvery('USERS_GET_USER_POSTS_REQUEST', getUserPosts),\n    yield takeEvery('USERS_GET_USER_ALBUMS_REQUEST', getUserAlbums)\n  ])\n}","import { all } from 'redux-saga/effects'\nimport uiSaga from './ui'\nimport usersSaga from './users'\n\nexport default function* rootSaga() {\n  yield all([\n    uiSaga(),\n    usersSaga()\n  ])\n}","import { applyMiddleware, createStore } from 'redux'\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './store/reducers'\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware]\n\n  return {\n    store: createStore(\n      reducer,\n      initialState,\n      composeWithDevTools(\n        applyMiddleware(...middlewares)\n      )\n    ),\n    sagaMiddleware\n  }\n}","import 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './configureStore'\nimport rootSaga from './store/sagas'\n\nconst { store, sagaMiddleware } = configureStore()\n\nsagaMiddleware.run(rootSaga)\n\nconst AppBundle = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  AppBundle\n  , document.getElementById('root'));\n"],"sourceRoot":""}