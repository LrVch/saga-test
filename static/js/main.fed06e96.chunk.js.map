{"version":3,"sources":["store/selectors/ui.js","store/selectors/users.js","store/actions/users.js","store/actions/ui.js","components/Block/Block.js","components/Post/Post.js","containers/Content/Content.js","components/OfflineBage/OfflineBage.js","components/UserCard/UserCard.js","containers/Users/Users.js","App.js","store/reducers/ui.js","store/reducers/users.js","store/reducers/index.js","store/sagas/ui.js","axios/users.js","axios/posts.js","axios/albums.js","services/user.service.js","store/sagas/users.js","store/sagas/index.js","configureStore.js","index.js"],"names":["uiState","state","ui","getIsOnLine","createSelector","isOnline","getThreeUserNorificationisShown","threeUserNorificationisShown","usersState","users","getUsers","getSelectedUser","selectedUser","getIsUsersLoading","isUsersLoading","getPosts","posts","getAlbums","albums","getIsContentLoading","isContentLoading","getShowing","showing","getViewedUsers","viewedUsers","getUsersEdge","usersEdge","getUsersByIds","ids","filter","user","includes","id","USERS_GET_USER_ALBUMS_REQUEST","USERS_GET_USER_ALBUMS_SUCCESS","USERS_GET_USER_ALBUMS_FAIL","USERS_GET_USER_POSTS_REQUEST","USERS_GET_USER_POSTS_SUCCESS","USERS_GET_USER_POSTS_FAIL","USERS_CLEAR_CONTENT","getAllUsersSuccess","type","payload","getAllUsersFail","usersSetSelecteduser","usersGetUserAlbumsSuccess","usersGetUserAlbumsFail","usersGetUserPostsSuccess","usersGetUserPostsFail","usersSetShowing","uiSetIsOnline","uiSetNotificationState","Block","style","position","left","right","top","bottom","background","zIndex","Post","post","title","body","Card","className","Content","header","description","connect","isOnLine","dispatch","usersClearContent","_","Segment","Button","onClick","icon","Icon","name","Dimmer","active","inverted","Loader","map","i","key","Group","itemsPerRow","album","color","Description","OfflineBage","memo","console","log","Label","visibility","opacity","transition","ribbon","UserCard","username","email","address","street","suite","city","zipcode","phone","company","cName","catchPhrase","disabled","onPosts","onAlbums","Header","Meta","extra","bind","basic","getAllUsersRequest","usersGetUserPostsRequest","usersGetUserAlbumsRequest","usersOnPageCount","useState","pageUsers","setPageUsers","totalPages","setTotalPages","usersOnPage","setUsersOnPage","activePage","setActivePage","useEffect","length","parseInt","offset","res","slice","Pagination","secondary","pointing","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","onPageChange","data","index","Dropdown","onChange","value","onPageCountChange","selection","floating","options","text","handePosts","handeAlbums","App","Container","columns","Grid","Row","Column","width","initialState","uiReducer","usersReducer","actionsTypes","indexOf","combineReducers","watchIsOnline","showErrorLoadingPostsNotification","showErrorLoadingAlbumsNotification","showSuccessLoadingPostsNotification","showSuccessLoadingAlbumsNotification","showThreeUsersNotification","uiSaga","isOnlineSourceChannel","eventChannel","emit","callbackIsOnline","callbackIsoffline","window","addEventListener","removeEventListener","call","chan","take","put","toast","size","select","names","u","join","time","onDismiss","all","Axios","create","baseURL","UserService","get","then","userPosts","userAlbums","getUserPosts","getUserAlbums","usersSaga","getAllusers","delay","cancelled","existedPosts","fork","task","cancel","existedAlbums","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","reducer","composeWithDevTools","applyMiddleware","configureStore","run","AppBundle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fed06e96.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const uiState = state => state.ui\n\nexport const getIsOnLine = createSelector(\n  uiState,\n  uiState => uiState.isOnline\n)\n\nexport const getThreeUserNorificationisShown = createSelector(\n  uiState,\n  uiState => uiState.threeUserNorificationisShown\n)","import { createSelector } from 'reselect'\n\nexport const usersState = state => state.users\n\nexport const getUsers = createSelector(\n  usersState,\n  usersState => usersState.users\n)\n\nexport const getSelectedUser= createSelector(\n  usersState,\n  usersState => usersState.selectedUser\n)\n\nexport const getIsUsersLoading= createSelector(\n  usersState,\n  usersState => usersState.isUsersLoading\n)\n\nexport const getPosts= createSelector(\n  usersState,\n  usersState => usersState.posts\n)\n\nexport const getAlbums= createSelector(\n  usersState,\n  usersState => usersState.albums\n)\n\nexport const getIsContentLoading= createSelector(\n  usersState,\n  usersState => usersState.isContentLoading\n)\n\nexport const getShowing= createSelector(\n  usersState,\n  usersState => usersState.showing\n)\n\nexport const getViewedUsers= createSelector(\n  usersState,\n  usersState => usersState.viewedUsers\n)\n\nexport const getUsersEdge= createSelector(\n  usersState,\n  usersState => usersState.usersEdge\n)\n\nexport const getUsersByIds = createSelector(\n  [getUsers, getViewedUsers],\n  (users, ids) => users.filter(user => ids.includes(user.id))\n)\n\n\n","export const USERS_GET_ALL_USERS_REQUEST = 'USERS_GET_ALL_USERS_REQUEST'\nexport const USERS_GET_ALL_USERS_SUCCESS = 'USERS_GET_ALL_USERS_SUCCESS'\nexport const USERS_GET_ALL_USERS_FAIL = 'USERS_GET_ALL_USERS_FAIL'\nexport const USERS_SET_SELECTED_USER = 'USERS_SET_SELECTED_USER'\nexport const USERS_CLEAR_SELECTED_USER = 'USERS_CLEAR_SELECTED_USER'\nexport const USERS_GET_USER_ALBUMS_REQUEST = 'USERS_GET_USER_ALBUMS_REQUEST'\nexport const USERS_GET_USER_ALBUMS_SUCCESS = 'USERS_GET_USER_ALBUMS_SUCCESS'\nexport const USERS_GET_USER_ALBUMS_FAIL = 'USERS_GET_USER_ALBUMS_FAIL'\nexport const USERS_GET_USER_POSTS_REQUEST = 'USERS_GET_USER_POSTS_REQUEST'\nexport const USERS_GET_USER_POSTS_SUCCESS = 'USERS_GET_USER_POSTS_SUCCESS'\nexport const USERS_GET_USER_POSTS_FAIL = 'USERS_GET_USER_POSTS_FAIL'\nexport const USERS_CLEAR_CONTENT = 'USERS_CLEAR_CONTENT'\nexport const USERS_SET_SHOWING = 'USERS_SET_SHOWING'\n\nexport const getAllUsersRequest = () => ({\n  type: USERS_GET_ALL_USERS_REQUEST\n})\n\nexport const getAllUsersSuccess = (users) => ({\n  type: USERS_GET_ALL_USERS_SUCCESS,\n  payload: { users }\n})\n\nexport const getAllUsersFail = () => ({\n  type: USERS_GET_ALL_USERS_FAIL\n})\n\nexport const usersSetSelecteduser = (id) => ({\n  type: USERS_SET_SELECTED_USER,\n  payload: { id }\n})\n\nexport const usersClearSelecteduser = () => ({\n  type: USERS_CLEAR_SELECTED_USER\n})\n\nexport const usersGetUserAlbumsRequest = (id) => ({\n  type: USERS_GET_USER_ALBUMS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserAlbumsSuccess = (albums) => ({\n  type: USERS_GET_USER_ALBUMS_SUCCESS,\n  payload: { albums }\n})\n\nexport const usersGetUserAlbumsFail = () => ({\n  type: USERS_GET_USER_ALBUMS_FAIL\n})\n\nexport const usersGetUserPostsRequest = (id) => ({\n  type: USERS_GET_USER_POSTS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserPostsSuccess = (posts) => ({\n  type: USERS_GET_USER_POSTS_SUCCESS,\n  payload: { posts }\n})\n\nexport const usersGetUserPostsFail = () => ({\n  type: USERS_GET_USER_POSTS_FAIL\n})\n\nexport const usersClearContent = () => ({\n  type: USERS_CLEAR_CONTENT\n})\n\nexport const usersSetShowing = (type) => ({\n  type: USERS_SET_SHOWING,\n  payload: { type }\n})\n\n\n\n","export const UI_SET_IS_ONLINE = 'UI_SET_IS_ONLINE'\nexport const UI_SET_NOTIFICATION_STATE = 'UI_SET_NOTIFICATION_STATE'\n\nexport const uiSetIsOnline = (isOnline) => ({\n  type: UI_SET_IS_ONLINE,\n  payload: { isOnline }\n})\n\nexport const uiSetNotificationState = (state) => ({\n  type: UI_SET_NOTIFICATION_STATE,\n  payload: { state }\n})\n\n\n","import React from 'react'\n\nconst Block = () => {\n  return (\n    <div style={{\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      background: '#cccccc2e',\n      zIndex: 9999,\n    }}></div>\n  )\n}\n\nexport default Block\n","import { Card } from 'semantic-ui-react'\nimport React from 'react'\n\nconst Post = ({post: {title, body}}) => {\n  return (\n    <Card className=\"full-width\">\n      <Card.Content header={title} />\n      <Card.Content description={body} />\n    </Card>\n  )\n}\n\nexport default Post\n","import './Content.css'\n\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Icon,\n  Loader,\n  Segment\n} from 'semantic-ui-react'\nimport {\n  getAlbums,\n  getIsContentLoading,\n  getIsOnLine,\n  getPosts,\n  getSelectedUser,\n  getShowing\n} from '../../store/selectors'\nimport {\n  usersClearContent,\n  usersSetSelecteduser,\n  usersSetShowing\n} from '../../store/actions'\n\nimport Block from '../../components/Block/Block'\nimport Post from '../../components/Post/Post'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Content = ({\n  albums,\n  isContentLoading,\n  isOnLine,\n  posts,\n  selectedUser,\n  showing,\n  usersClearContent,\n  usersSetSelecteduser,\n  usersSetShowing,\n}) => {\n  const handleOnClose = () => {\n    usersClearContent()\n    usersSetSelecteduser(null)\n    usersSetShowing(null)\n  }\n  return (\n    <>\n      {selectedUser && <Segment className=\"content full-height\">\n        {!isOnLine && <Block />}\n        <div className=\"content__header\">\n          <Button onClick={handleOnClose} icon>\n            <Icon name='times' />\n          </Button>\n        </div>\n\n        <div className=\"content__inner\">\n\n          {isContentLoading && <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>}\n\n          {!isContentLoading && showing === 'posts' && <div className=\"content__info\">\n            {posts.map((post, i) => <Post post={post} key={i} />)}\n          </div>}\n\n          {!isContentLoading && showing === 'albums' && <Card.Group itemsPerRow={4}>\n            {albums.map((album, i) => <Card key={i} color='green'>\n              <Card.Content>\n                <Card.Description>\n                  {album.title}\n                </Card.Description>\n              </Card.Content>\n            </Card>)}\n          </Card.Group>}\n\n        </div>\n      </Segment>}\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  selectedUser: getSelectedUser(state),\n  posts: getPosts(state),\n  albums: getAlbums(state),\n  isContentLoading: getIsContentLoading(state),\n  showing: getShowing(state),\n  isOnLine: getIsOnLine(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersClearContent: _ => dispatch(usersClearContent()),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Content)\n","import React, {memo} from 'react'\n\nimport { Label } from 'semantic-ui-react'\n\nconst OfflineBage = memo(({isOnLine}) => {\n  console.log(isOnLine);\n  \n  return (\n    <Label style={{\n      visibility: isOnLine ? 'hidden' : 'visible',\n      opacity:isOnLine ? 0 : 1,\n      transition: 'all .5s'\n    }} color='red' ribbon>\n      Offline\n    </Label>\n  )\n})\n\nexport default OfflineBage\n","import { Button, Card } from 'semantic-ui-react'\n\nimport React from 'react'\n\nconst UserCard = ({\n  user: {\n    id,\n    name, username, email,\n    address: {\n      street,\n      suite,\n      city,\n      zipcode\n    },\n    phone,\n    company: {\n      name: cName,\n      catchPhrase,\n    }\n  },\n  disabled,\n  onPosts= () => {},\n  onAlbums = () => {}\n}) => {\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>{username}</Card.Meta>\n        <Card.Meta>{email}</Card.Meta>\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${street} ${suite} ${city} ${zipcode}`}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Phone</Card.Meta>\n          {phone}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${cName}: ${catchPhrase} `}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button disabled={disabled} onClick={onPosts.bind(null, id)} basic color='green'>\n            Posts\n          </Button>\n          <Button disabled={disabled} onClick={onAlbums.bind(null, id)} basic color='green'>\n            Albums\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default UserCard\n","import './Users.css';\n\nimport { Card, Dimmer, Dropdown, Loader, Pagination } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { getAllUsersRequest, usersGetUserAlbumsRequest, usersGetUserPostsRequest, usersSetSelecteduser, usersSetShowing } from '../../store/actions'\nimport { getIsUsersLoading, getSelectedUser, getUsers } from '../../store/selectors/users'\n\nimport Block from '../../components/Block/Block';\nimport OfflineBage from '../../components/OfflineBage/OfflineBage';\nimport UserCard from '../../components/UserCard/UserCard'\nimport { connect } from 'react-redux'\nimport { getIsOnLine } from '../../store/selectors';\n\nconst Users = ({\n  getAllUsersRequest,\n  isUsersLoading,\n  selectedUser,\n  users,\n  usersGetUserAlbumsRequest,\n  usersGetUserPostsRequest,\n  usersOnPageCount,\n  usersSetSelecteduser,\n  usersSetShowing,\n  isOnLine,\n}) => {\n  const [pageUsers, setPageUsers] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n  const [usersOnPage, setUsersOnPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n\n  const onPageChange = index => {\n    setActivePage(index)\n  }\n\n  const onPageCountChange = value => {\n    setUsersOnPage(parseInt(value))\n  }\n\n  const handePosts = id => {\n    usersSetSelecteduser(id)\n    usersGetUserPostsRequest(id)\n    usersSetShowing('posts')\n  }\n\n  const handeAlbums = id => {\n    usersSetSelecteduser(id)\n    usersGetUserAlbumsRequest(id)\n    usersSetShowing('albums')\n  }\n\n  useEffect(() => {\n    const isIntegerCount = users.length % usersOnPage === 0\n    const totalPages = isIntegerCount ? users.length / usersOnPage : parseInt(users.length / usersOnPage) + 1\n    users.length && usersOnPage && setTotalPages(totalPages)\n  }, [setTotalPages, usersOnPage, users])\n\n  useEffect(() => {\n    if (totalPages && users.length) {\n      if (activePage > totalPages) {\n        setActivePage(totalPages)\n      } else {\n        const offset = usersOnPage * (activePage - 1)\n        const res = users.slice(offset, offset + usersOnPage)\n        res.length && setPageUsers(res)\n      }\n    }\n  }, [users, usersOnPage, activePage, totalPages])\n\n  useEffect(() => {\n    getAllUsersRequest()\n  }, [getAllUsersRequest])\n\n  useEffect(() => {\n    setUsersOnPage(usersOnPageCount)\n  }, [usersOnPageCount])\n\n  return (\n    <div className=\"users\">\n      <OfflineBage isOnLine={isOnLine}/>\n      {!isOnLine && <Block />}\n      <div className=\"users__pagination\" style={{\n        opacity: !pageUsers.length ? 0 : 1,\n      }}>\n        <Pagination\n          secondary\n          pointing\n          disabled={!!selectedUser}\n          boundaryRange={0}\n          activePage={activePage}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={totalPages}\n          onPageChange={(_, data) => onPageChange(data.activePage)}\n        />\n        <Dropdown\n          disabled={!!selectedUser}\n          onChange={(_, {value}) => onPageCountChange(value)}\n          selection\n          floating\n          value={usersOnPage}\n          options={[\n            {\n              key: 2,\n              text: '2',\n              value: 2\n            },\n            {\n              key: 3,\n              text: '3',\n              value: 3\n            },\n            {\n              key: 4,\n              text: '4',\n              value: 4\n            },\n          ]}\n        />\n      </div>\n      <div className=\"users__inner\">\n        {isUsersLoading}\n        <div className={\"users__container \" + (isUsersLoading && \"users__container_loaded\")}>\n          <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>\n        </div>\n\n        <Card.Group className={\"users__container \" + (!isUsersLoading && \"users__container_loaded\")}>\n          {pageUsers.length > 0 && pageUsers.map((user, i) => {\n            return (\n              <UserCard\n                disabled={selectedUser && user.id !== selectedUser}\n                onPosts={id => handePosts(id)}\n                onAlbums={id => handeAlbums(id)}\n                key={i}\n                user={user}\n              />\n            )\n          })}\n        </Card.Group>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  selectedUser: getSelectedUser(state),\n  isUsersLoading: getIsUsersLoading(state),\n  isOnLine: getIsOnLine(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getAllUsersRequest: _ => dispatch(getAllUsersRequest()),\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersGetUserPostsRequest: id => dispatch(usersGetUserPostsRequest(id)),\n  usersGetUserAlbumsRequest: id => dispatch(usersGetUserAlbumsRequest(id)),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n","import './App.css';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport Content from './containers/Content/Content';\nimport React from 'react';\nimport { SemanticToastContainer } from 'react-semantic-toasts';\nimport Users from './containers/Users/Users';\n\nfunction App() {\n  return (\n    <>\n      <Container className=\"full-height\" columns={2}>\n        <Grid className=\"full-height\">\n          <Grid.Row className=\"full-height\">\n            <Grid.Column className=\"full-height\" width={6}>\n              <Users usersOnPageCount={3} />\n            </Grid.Column>\n            <Grid.Column className=\"full-height\" width={10}>\n              <Content />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <SemanticToastContainer position=\"bottom-right\" />\n    </>\n  );\n}\n\nexport default App;\n","import * as actionsTypes from '../actions';\n\nconst initialState = {\n  isOnline: true,\n  threeUserNorificationisShown: false\n}\n\nconst uiReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case actionsTypes.UI_SET_IS_ONLINE: {\n      const { isOnline } = payload\n      return {\n        ...state,\n        isOnline\n      }\n    }\n\n    case actionsTypes.UI_SET_NOTIFICATION_STATE: {\n      const { state: threeUserNorificationisShown} = payload\n      return {\n        ...state,\n        threeUserNorificationisShown\n      }\n    }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default uiReducer","import * as actionsTypes from '../actions';\n\nconst initialState = {\n  albums: [],\n  isContentLoading: false,\n  isUsersLoading: true,\n  posts: [],\n  selectedUser: null,\n  users: [],\n  showing: null,\n  viewedUsers: [],\n  usersEdge: 3\n}\n\nconst usersReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case actionsTypes.USERS_GET_ALL_USERS_REQUEST: {\n      return {\n        ...state,\n        isUsersLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_SUCCESS: {\n      const { users } = payload\n      return {\n        ...state,\n        users,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_FAIL: {\n      return {\n        ...state,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_SET_SELECTED_USER: {\n      const { id } = payload\n\n      return {\n        ...state,\n        selectedUser: id,\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_SELECTED_USER: {\n      return {\n        ...state,\n        selectedUser: null\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_REQUEST:\n    case actionsTypes.USERS_GET_USER_POSTS_REQUEST: {\n      return {\n        ...state,\n        isContentLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_FAIL:\n    case actionsTypes.USERS_GET_USER_ALBUMS_FAIL: {\n      return {\n        ...state,\n        isContentLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_SUCCESS: {\n      const { viewedUsers, selectedUser } = state\n      return {\n        ...state,\n        isContentLoading: false,\n        posts: payload.posts,\n        viewedUsers: (selectedUser && viewedUsers.indexOf(selectedUser) === -1)\n          ? [...viewedUsers, selectedUser]\n          : viewedUsers\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_SUCCESS: {\n      const { viewedUsers, selectedUser } = state\n      return {\n        ...state,\n        isContentLoading: false,\n        albums: payload.albums,\n        viewedUsers: (selectedUser && viewedUsers.indexOf(selectedUser) === -1)\n          ? [...viewedUsers, selectedUser]\n          : viewedUsers\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_CONTENT: {\n      return {\n        ...state,\n        albums: [],\n        posts: []\n      }\n    }\n\n    case actionsTypes.USERS_SET_SHOWING: {\n      return {\n        ...state,\n        showing: payload.type\n      }\n    }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer","import { combineReducers } from 'redux'\nimport uiReducer from './ui'\nimport usersReducer from './users'\n\nexport default combineReducers({\n  ui: uiReducer,\n  users: usersReducer\n})","import {\n  USERS_GET_USER_ALBUMS_FAIL,\n  USERS_GET_USER_ALBUMS_REQUEST,\n  USERS_GET_USER_ALBUMS_SUCCESS,\n  USERS_GET_USER_POSTS_FAIL,\n  USERS_GET_USER_POSTS_REQUEST,\n  USERS_GET_USER_POSTS_SUCCESS\n} from '../actions/users'\nimport { all, call, put, select, take } from 'redux-saga/effects'\nimport { getAlbums, getPosts, getUsersByIds, getUsersEdge, getViewedUsers } from '../selectors/users'\nimport { uiSetIsOnline, uiSetNotificationState } from '../actions'\n\nimport React from 'react'\nimport { eventChannel } from 'redux-saga'\nimport { getThreeUserNorificationisShown } from '../selectors'\nimport { toast } from 'react-semantic-toasts';\n\nfunction isOnlineSourceChannel() {\n  return eventChannel((emit) => {\n    const callbackIsOnline = function () {\n      emit(true)\n    }\n    const callbackIsoffline = function () {\n      emit(false)\n    }\n    window.addEventListener(\"online\", callbackIsOnline)\n    window.addEventListener(\"offline\", callbackIsoffline)\n\n    return () => {\n      window.removeEventListener(\"online\", callbackIsOnline)\n      window.removeEventListener(\"offline\", callbackIsoffline)\n    }\n  })\n}\n\nfunction* watchIsOnline() {\n  const chan = yield call(isOnlineSourceChannel)\n  while (true) {\n    const isOnline = yield take(chan)\n    yield put(uiSetIsOnline(isOnline))\n\n    if (isOnline) {\n      toast({\n        title: 'Now you are online!!',\n        description: <p>Take a chance to do somethins awesome!</p>,\n        size: 'small',\n      })\n    } else {\n      toast({\n        title: 'Now you are offline (:',\n        description: <p>Take a rest. Sure, soon you will be able to do somethig awesome!</p>,\n        size: 'small',\n        type: 'warning',\n      }, () => { }, () => { }, () => { })\n    }\n  }\n}\n\nfunction* showErrorLoadingPostsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_POSTS_FAIL)\n\n    toast({\n      title: 'Error loading posts',\n      description: <p>This is a Semantic UI toast</p>,\n      size: 'small',\n      type: 'warning',\n    })\n  }\n}\n\nfunction* showErrorLoadingAlbumsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_ALBUMS_FAIL)\n\n    toast({\n      title: 'Error loading albums',\n      description: <p>This is a Semantic UI toast</p>,\n      size: 'small',\n      type: 'warning',\n    })\n  }\n}\n\nfunction* showSuccessLoadingPostsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_POSTS_REQUEST)\n    const posts = yield select(getPosts)\n\n    if (!posts.length) {\n      yield take(USERS_GET_USER_POSTS_SUCCESS)\n      toast({\n        title: 'Posts loaded successfull',\n        description: <p>This is a Semantic UI toast</p>,\n        size: 'small'\n      })\n    }\n  }\n}\n\nfunction* showSuccessLoadingAlbumsNotification() {\n  while (true) {\n    yield take(USERS_GET_USER_ALBUMS_REQUEST)\n    const ablums = yield select(getAlbums)\n\n    if (!ablums.length) {\n      yield take(USERS_GET_USER_ALBUMS_SUCCESS)\n      toast({\n        title: 'Ablums loaded successfull',\n        description: <p>This is a Semantic UI toast</p>,\n        size: 'small'\n      })\n    }\n  }\n}\n\nfunction* showThreeUsersNotification() {\n  // let isShown\n\n  while (true) {\n    yield take([USERS_GET_USER_POSTS_SUCCESS, USERS_GET_USER_ALBUMS_SUCCESS])\n    const viewedUsers = yield select(getViewedUsers)\n    const usersEdge = yield select(getUsersEdge)\n\n    if (viewedUsers.length === usersEdge) {\n      const isShown =   yield select(getThreeUserNorificationisShown)\n\n      if (!isShown) {\n        const users = yield select(getUsersByIds)\n        const names = users.map(u => u.name)\n\n        yield put(uiSetNotificationState(true))\n        \n        toast({\n          title: 'Congratulatin! You have shown three users!',\n          description: <p>Users: {names.join(', ')}</p>,\n          size: 'massive',\n          time: 3000,\n          color: 'green',\n          onDismiss: () => {}\n        })\n      }\n    }\n  }\n}\n\nexport default function* uiSaga() {\n  yield all([\n    watchIsOnline(),\n    showErrorLoadingPostsNotification(),\n    showSuccessLoadingPostsNotification(),\n    showErrorLoadingAlbumsNotification(),\n    showSuccessLoadingAlbumsNotification(),\n    showThreeUsersNotification()\n  ])\n}","import Axios from 'axios'\n\nexport const users = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/users'\n})    ","import Axios from 'axios'\n\nexport const posts = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts'\n})    ","import Axios from 'axios'\n\nexport const albums = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/albums'\n})    ","import { albums, posts, users } from '../axios'\n\nclass UserService {\n\n  static getAllusers() {\n    return users.get().then(({ data }) => data)\n  }\n\n  static getUserPosts(id) {\n    return posts.get(`?userId=${id}`).then(({ data }) => data)\n  }\n\n  static getUserAlbums(id) {\n    return albums.get(`?userId=${id}`).then(({ data }) => data)\n  }\n}\n\nexport default UserService","import {\n  USERS_CLEAR_CONTENT,\n  USERS_GET_USER_ALBUMS_FAIL,\n  USERS_GET_USER_ALBUMS_REQUEST,\n  USERS_GET_USER_POSTS_FAIL,\n  USERS_GET_USER_POSTS_REQUEST,\n  getAllUsersFail,\n  getAllUsersSuccess,\n  usersGetUserAlbumsFail,\n  usersGetUserAlbumsSuccess,\n  usersGetUserPostsFail,\n  usersGetUserPostsSuccess\n} from '../actions/users'\nimport {\n  all,\n  call,\n  cancel,\n  cancelled,\n  delay,\n  fork,\n  put,\n  select,\n  take,\n  takeEvery\n} from 'redux-saga/effects'\nimport { getAlbums, getPosts } from '../selectors/users'\n\nimport UserService from '../../services/user.service'\n\nexport function* getUsers() {\n  try {\n    const users = yield call(UserService.getAllusers)\n    yield put(getAllUsersSuccess(users))\n  } catch (error) {\n    yield put(getAllUsersFail())\n  }\n}\n\nexport function* userPosts(id) {\n  for (let i = 0; i < 5; i++) {\n    try {\n      const posts = yield call(UserService.getUserPosts, id)\n      yield put(usersGetUserPostsSuccess(posts))\n      return\n    } catch (error) {\n      if (i < 4) {\n        yield delay(1000);\n      }\n    } finally {\n      if (yield cancelled()) {\n        break\n      }\n    }\n  }\n\n  const cancelResult = yield cancelled()\n\n  if (!cancelResult) {\n    yield put(usersGetUserPostsFail())\n  }\n}\n\nexport function* userAlbums(id) {\n  for (let i = 0; i < 5; i++) {\n    try {\n      const albums = yield call(UserService.getUserAlbums, id)\n      yield put(usersGetUserAlbumsSuccess(albums))\n      return\n    } catch (error) {\n      if (i < 4) {\n        yield delay(1000);\n      }\n    } finally {\n      if (yield cancelled()) {\n        break\n      }\n    }\n  }\n\n  const cancelResult = yield cancelled()\n\n  if (!cancelResult) {\n    yield put(usersGetUserAlbumsFail())\n\n  }\n}\n\nexport function* getUserPosts() {\n  while (true) {\n    const { payload: { id } } = yield take('USERS_GET_USER_POSTS_REQUEST')\n    const existedPosts = yield select(getPosts)\n\n    if (existedPosts.length) {\n      yield put(usersGetUserPostsSuccess(existedPosts))\n    } else {\n      const task = yield fork(userPosts, id)\n      const { type } = yield take([USERS_GET_USER_ALBUMS_REQUEST, USERS_CLEAR_CONTENT, USERS_GET_USER_POSTS_FAIL])\n      if (type !== USERS_GET_USER_POSTS_FAIL) {\n        yield cancel(task)\n      }\n    }\n  }\n}\n\nexport function* getUserAlbums() {\n  while (true) {\n    const { payload: { id } } = yield take('USERS_GET_USER_ALBUMS_REQUEST')\n    const existedAlbums = yield select(getAlbums)\n\n    if (existedAlbums.length) {\n      yield put(usersGetUserAlbumsSuccess(existedAlbums))\n    } else {\n      const task = yield fork(userAlbums, id)\n      const { type } = yield take([USERS_GET_USER_POSTS_REQUEST, USERS_CLEAR_CONTENT, USERS_GET_USER_ALBUMS_FAIL])\n      if (type !== USERS_GET_USER_ALBUMS_FAIL) {\n        yield cancel(task)\n      }\n    }\n  }\n}\n\nexport default function* usersSaga() {\n  yield all([\n    yield takeEvery('USERS_GET_ALL_USERS_REQUEST', getUsers),\n    getUserAlbums(),\n    getUserPosts()\n  ])\n}","import { all } from 'redux-saga/effects'\nimport uiSaga from './ui'\nimport usersSaga from './users'\n\nexport default function* rootSaga() {\n  yield all([\n    uiSaga(),\n    usersSaga()\n  ])\n}","import { applyMiddleware, createStore } from 'redux'\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './store/reducers'\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware]\n\n  return {\n    store: createStore(\n      reducer,\n      initialState,\n      composeWithDevTools(\n        applyMiddleware(...middlewares)\n      )\n    ),\n    sagaMiddleware\n  }\n}","import 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './configureStore'\nimport rootSaga from './store/sagas'\n\nconst { store, sagaMiddleware } = configureStore()\n\nsagaMiddleware.run(rootSaga)\n\nconst AppBundle = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  AppBundle\n  , document.getElementById('root'));\n"],"sourceRoot":""}