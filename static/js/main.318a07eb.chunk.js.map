{"version":3,"sources":["store/selectors/users.js","store/actions/users.js","components/Post/Post.js","containers/Content/Content.js","components/UserCard/UserCard.js","containers/Users/Users.js","App.js","store/reducers/ui.js","store/reducers/users.js","store/reducers/index.js","store/sagas/ui.js","axios/users.js","axios/posts.js","axios/albums.js","services/user.service.js","store/sagas/users.js","store/sagas/index.js","configureStore.js","index.js"],"names":["usersState","state","users","getUsers","createSelector","getSelectedUser","selectedUser","getIsUsersLoading","isUsersLoading","getPosts","posts","getAlbums","albums","getIsContentLoading","isContentLoading","getShowing","showing","USERS_GET_USER_ALBUMS_REQUEST","USERS_GET_USER_POSTS_REQUEST","getAllUsersSuccess","type","payload","getAllUsersFail","usersSetSelecteduser","id","usersGetUserAlbumsSuccess","usersGetUserAlbumsFail","usersGetUserPostsSuccess","usersGetUserPostsFail","usersSetShowing","Post","post","title","body","Card","className","Content","header","description","connect","dispatch","usersClearContent","_","Segment","Button","onClick","icon","Icon","name","Dimmer","active","inverted","Loader","map","i","key","Group","itemsPerRow","album","color","Description","UserCard","user","username","email","address","street","suite","city","zipcode","phone","company","cName","catchPhrase","disabled","onPosts","onAlbums","Header","Meta","extra","bind","basic","getAllUsersRequest","usersGetUserPostsRequest","usersGetUserAlbumsRequest","usersOnPageCount","useState","pageUsers","setPageUsers","totalPages","setTotalPages","usersOnPage","setUsersOnPage","activePage","setActivePage","useEffect","length","parseInt","offset","res","slice","style","opacity","Pagination","secondary","pointing","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","onPageChange","data","index","Dropdown","onChange","value","onPageCountChange","selection","floating","options","text","handePosts","handeAlbums","App","Container","columns","Grid","Row","Column","width","initialState","uiReducer","usersReducer","actionsTypes","combineReducers","ui","uiSaga","all","Axios","create","baseURL","UserService","get","then","userPosts","userAlbums","getUserPosts","getUserAlbums","usersSaga","call","getAllusers","put","console","error","action","select","existedPosts","fork","take","cancel","existedAlbums","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","reducer","composeWithDevTools","applyMiddleware","configureStore","run","AppBundle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.318a07eb.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const usersState = state => state.users\n\nexport const getUsers = createSelector(\n  usersState,\n  usersState => usersState.users\n)\n\nexport const getSelectedUser= createSelector(\n  usersState,\n  usersState => usersState.selectedUser\n)\n\nexport const getIsUsersLoading= createSelector(\n  usersState,\n  usersState => usersState.isUsersLoading\n)\n\nexport const getPosts= createSelector(\n  usersState,\n  usersState => usersState.posts\n)\n\nexport const getAlbums= createSelector(\n  usersState,\n  usersState => usersState.albums\n)\n\nexport const getIsContentLoading= createSelector(\n  usersState,\n  usersState => usersState.isContentLoading\n)\n\nexport const getShowing= createSelector(\n  usersState,\n  usersState => usersState.showing\n)\n\n\n","export const USERS_GET_ALL_USERS_REQUEST = 'USERS_GET_ALL_USERS_REQUEST'\nexport const USERS_GET_ALL_USERS_SUCCESS = 'USERS_GET_ALL_USERS_SUCCESS'\nexport const USERS_GET_ALL_USERS_FAIL = 'USERS_GET_ALL_USERS_FAIL'\nexport const USERS_SET_SELECTED_USER = 'USERS_SET_SELECTED_USER'\nexport const USERS_CLEAR_SELECTED_USER = 'USERS_CLEAR_SELECTED_USER'\nexport const USERS_GET_USER_ALBUMS_REQUEST = 'USERS_GET_USER_ALBUMS_REQUEST'\nexport const USERS_GET_USER_ALBUMS_SUCCESS = 'USERS_GET_USER_ALBUMS_SUCCESS'\nexport const USERS_GET_USER_ALBUMS_FAIL = 'USERS_GET_USER_ALBUMS_FAIL'\nexport const USERS_GET_USER_POSTS_REQUEST = 'USERS_GET_USER_POSTS_REQUEST'\nexport const USERS_GET_USER_POSTS_SUCCESS = 'USERS_GET_USER_POSTS_SUCCESS'\nexport const USERS_GET_USER_POSTS_FAIL = 'USERS_GET_USER_POSTS_FAIL'\nexport const USERS_CLEAR_CONTENT = 'USERS_CLEAR_CONTENT'\nexport const USERS_SET_SHOWING = 'USERS_SET_SHOWING'\n\nexport const getAllUsersRequest = () => ({\n  type: USERS_GET_ALL_USERS_REQUEST\n})\n\nexport const getAllUsersSuccess = (users) => ({\n  type: USERS_GET_ALL_USERS_SUCCESS,\n  payload: { users }\n})\n\nexport const getAllUsersFail = () => ({\n  type: USERS_GET_ALL_USERS_FAIL\n})\n\nexport const usersSetSelecteduser = (id) => ({\n  type: USERS_SET_SELECTED_USER,\n  payload: { id }\n})\n\nexport const usersClearSelecteduser = () => ({\n  type: USERS_CLEAR_SELECTED_USER\n})\n\nexport const usersGetUserAlbumsRequest = (id) => ({\n  type: USERS_GET_USER_ALBUMS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserAlbumsSuccess = (albums) => ({\n  type: USERS_GET_USER_ALBUMS_SUCCESS,\n  payload: { albums }\n})\n\nexport const usersGetUserAlbumsFail = () => ({\n  type: USERS_GET_USER_ALBUMS_FAIL\n})\n\nexport const usersGetUserPostsRequest = (id) => ({\n  type: USERS_GET_USER_POSTS_REQUEST,\n  payload: { id }\n})\n\nexport const usersGetUserPostsSuccess = (posts) => ({\n  type: USERS_GET_USER_POSTS_SUCCESS,\n  payload: { posts }\n})\n\nexport const usersGetUserPostsFail = () => ({\n  type: USERS_GET_USER_POSTS_FAIL\n})\n\nexport const usersClearContent = () => ({\n  type: USERS_CLEAR_CONTENT\n})\n\nexport const usersSetShowing = (type) => ({\n  type: USERS_SET_SHOWING,\n  payload: { type }\n})\n\n\n\n","import { Card } from 'semantic-ui-react'\nimport React from 'react'\n\nconst Post = ({post: {title, body}}) => {\n  return (\n    <Card className=\"full-width\">\n      <Card.Content header={title} />\n      <Card.Content description={body} />\n    </Card>\n  )\n}\n\nexport default Post\n","import './Content.css'\n\nimport { Button, Card, Dimmer, Icon, Loader, Segment } from 'semantic-ui-react'\nimport { getAlbums, getIsContentLoading, getPosts, getSelectedUser, getShowing } from '../../store/selectors/users'\nimport { usersClearContent, usersSetSelecteduser, usersSetShowing } from '../../store/actions'\n\nimport Post from '../../components/Post/Post'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Content = ({\n  albums,\n  isContentLoading,\n  posts,\n  selectedUser,\n  usersClearContent,\n  usersSetSelecteduser,\n  usersSetShowing,\n  showing\n}) => {\n  const handleOnClose = () => {\n    usersClearContent()\n    usersSetSelecteduser(null)\n    usersSetShowing(null)\n  }\n  return (\n    <>\n      {selectedUser && <Segment className=\"content full-height\">\n\n        <div className=\"content__header\">\n          <Button onClick={handleOnClose} icon>\n            <Icon name='times' />\n          </Button>\n        </div>\n\n        <div className=\"content__inner\">\n\n          {isContentLoading && <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>}\n\n          {!isContentLoading && showing === 'posts' && <div className=\"content__info\">\n            {posts.map((post, i) => <Post post={post} key={i} />)}\n          </div>}\n\n          {!isContentLoading && showing === 'albums' && <Card.Group itemsPerRow={4}>\n            {albums.map((album, i) => <Card key={i} color='green'>\n            <Card.Content>\n            <Card.Description>\n              {album.title}\n            </Card.Description>\n            </Card.Content>\n            </Card>)}\n          </Card.Group>}\n\n        </div>\n      </Segment>}\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  selectedUser: getSelectedUser(state),\n  posts: getPosts(state),\n  albums: getAlbums(state),\n  isContentLoading: getIsContentLoading(state),\n  showing: getShowing(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersClearContent: _ => dispatch(usersClearContent()),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Content)\n","import { Button, Card } from 'semantic-ui-react'\n\nimport React from 'react'\n\nconst UserCard = ({\n  user: {\n    id,\n    name, username, email,\n    address: {\n      street,\n      suite,\n      city,\n      zipcode\n    },\n    phone,\n    company: {\n      name: cName,\n      catchPhrase,\n    }\n  },\n  disabled,\n  onPosts= () => {},\n  onAlbums = () => {}\n}) => {\n  return (\n    <Card>\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n        <Card.Meta>{username}</Card.Meta>\n        <Card.Meta>{email}</Card.Meta>\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${street} ${suite} ${city} ${zipcode}`}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Phone</Card.Meta>\n          {phone}\n        </Card.Description>\n        <br />\n        <Card.Description>\n          <Card.Meta>Address</Card.Meta>\n          {`${cName}: ${catchPhrase} `}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button disabled={disabled} onClick={onPosts.bind(null, id)} basic color='green'>\n            Posts\n          </Button>\n          <Button disabled={disabled} onClick={onAlbums.bind(null, id)} basic color='green'>\n            Albums\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default UserCard\n","import './Users.css';\n\nimport { Card, Dimmer, Dropdown, Loader, Pagination } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { getAllUsersRequest, usersGetUserAlbumsRequest, usersGetUserPostsRequest, usersSetSelecteduser, usersSetShowing } from '../../store/actions'\nimport { getIsUsersLoading, getSelectedUser, getUsers } from '../../store/selectors/users'\n\nimport UserCard from '../../components/UserCard/UserCard'\nimport { connect } from 'react-redux'\n\nconst Users = ({\n  getAllUsersRequest,\n  isUsersLoading,\n  selectedUser,\n  users,\n  usersGetUserAlbumsRequest,\n  usersGetUserPostsRequest,\n  usersOnPageCount,\n  usersSetSelecteduser,\n  usersSetShowing,\n}) => {\n  const [pageUsers, setPageUsers] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n  const [usersOnPage, setUsersOnPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n\n  const onPageChange = index => {\n    setActivePage(index)\n  }\n\n  const onPageCountChange = value => {\n    setUsersOnPage(parseInt(value))\n  }\n\n  const handePosts = id => {\n    usersSetSelecteduser(id)\n    usersGetUserPostsRequest(id)\n    usersSetShowing('posts')\n  }\n\n  const handeAlbums = id => {\n    usersSetSelecteduser(id)\n    usersGetUserAlbumsRequest(id)\n    usersSetShowing('albums')\n  }\n\n  useEffect(() => {\n    const isIntegerCount = users.length % usersOnPage === 0\n    const totalPages = isIntegerCount ? users.length / usersOnPage : parseInt(users.length / usersOnPage) + 1\n    users.length && usersOnPage && setTotalPages(totalPages)\n  }, [setTotalPages, usersOnPage, users])\n\n  useEffect(() => {\n    if (totalPages && users.length) {\n      if (activePage > totalPages) {\n        setActivePage(totalPages)\n      } else {\n        const offset = usersOnPage * (activePage - 1)\n        const res = users.slice(offset, offset + usersOnPage)\n        res.length && setPageUsers(res)\n      }\n    }\n  }, [users, usersOnPage, activePage, totalPages])\n\n  useEffect(() => {\n    getAllUsersRequest()\n  }, [getAllUsersRequest])\n\n  useEffect(() => {\n    setUsersOnPage(usersOnPageCount)\n  }, [usersOnPageCount])\n\n  return (\n    <div className=\"users\">\n      <div className=\"users__pagination\" style={{\n        opacity: !pageUsers.length ? 0 : 1,\n      }}>\n        <Pagination\n          secondary\n          pointing\n          disabled={!!selectedUser}\n          boundaryRange={0}\n          activePage={activePage}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={totalPages}\n          onPageChange={(_, data) => onPageChange(data.activePage)}\n        />\n        <Dropdown\n          disabled={!!selectedUser}\n          onChange={(_, {value}) => onPageCountChange(value)}\n          selection\n          floating\n          value={usersOnPage}\n          options={[\n            {\n              key: 2,\n              text: '2',\n              value: 2\n            },\n            {\n              key: 3,\n              text: '3',\n              value: 3\n            },\n            {\n              key: 4,\n              text: '4',\n              value: 4\n            },\n          ]}\n        />\n      </div>\n      <div className=\"users__inner\">\n        {isUsersLoading}\n        <div className={\"users__container \" + (isUsersLoading && \"users__container_loaded\")}>\n          <Dimmer active inverted>\n            <Loader inverted>Waiting</Loader>\n          </Dimmer>\n        </div>\n\n        <Card.Group className={\"users__container \" + (!isUsersLoading && \"users__container_loaded\")}>\n          {pageUsers.length > 0 && pageUsers.map((user, i) => {\n            return (\n              <UserCard\n                disabled={selectedUser && user.id !== selectedUser}\n                onPosts={id => handePosts(id)}\n                onAlbums={id => handeAlbums(id)}\n                key={i}\n                user={user}\n              />\n            )\n          })}\n        </Card.Group>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  selectedUser: getSelectedUser(state),\n  isUsersLoading: getIsUsersLoading(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getAllUsersRequest: _ => dispatch(getAllUsersRequest()),\n  usersSetSelecteduser: id => dispatch(usersSetSelecteduser(id)),\n  usersGetUserPostsRequest: id => dispatch(usersGetUserPostsRequest(id)),\n  usersGetUserAlbumsRequest: id => dispatch(usersGetUserAlbumsRequest(id)),\n  usersSetShowing: type => dispatch(usersSetShowing(type))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users)\n","import './App.css';\n\nimport { Container, Grid } from 'semantic-ui-react';\n\nimport Content from './containers/Content/Content';\nimport React from 'react';\nimport Users from './containers/Users/Users';\n\nfunction App() {\n  return (\n    <Container className=\"full-height\" columns={2}>\n      <Grid className=\"full-height\">\n        <Grid.Row className=\"full-height\">\n          <Grid.Column className=\"full-height\" width={6}>\n            <Users usersOnPageCount={3} />\n          </Grid.Column>\n          <Grid.Column className=\"full-height\" width={10}>\n            <Content />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// import * as actionsTypes from '../actions';\n\nconst initialState = {\n\n}\n\nconst uiReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    // case actionsTypes.UI_CHANGE_THEME: {\n    //   const { theme } = payload\n    //   return {\n    //     ...state,\n    //     theme\n    //   }\n    // }\n\n    default:\n      return state\n  }\n}\n\nexport default uiReducer","import * as actionsTypes from '../actions';\n\nconst initialState = {\n  albums: [],\n  isContentLoading: false,\n  isUsersLoading: true,\n  posts: [],\n  selectedUser: null,\n  users: [],\n  showing: null\n}\n\nconst usersReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n    case actionsTypes.USERS_GET_ALL_USERS_REQUEST: {\n      return {\n        ...state,\n        isUsersLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_SUCCESS: {\n      const { users } = payload\n      return {\n        ...state,\n        users,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_ALL_USERS_FAIL: {\n      return {\n        ...state,\n        isUsersLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_SET_SELECTED_USER: {\n      return {\n        ...state,\n        selectedUser: payload.id\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_SELECTED_USER: {\n      return {\n        ...state,\n        selectedUser: null\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_REQUEST:\n    case actionsTypes.USERS_GET_USER_POSTS_REQUEST: {\n      return {\n        ...state,\n        isContentLoading: true\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_FAIL:\n    case actionsTypes.USERS_GET_USER_ALBUMS_FAIL: {\n      return {\n        ...state,\n        isContentLoading: false\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_POSTS_SUCCESS: {\n      return {\n        ...state,\n        isContentLoading: false,\n        posts: payload.posts\n      }\n    }\n\n    case actionsTypes.USERS_GET_USER_ALBUMS_SUCCESS: {\n      return {\n        ...state,\n        isContentLoading: false,\n        albums: payload.albums\n      }\n    }\n\n    case actionsTypes.USERS_CLEAR_CONTENT: {\n      return {\n        ...state,\n        albums: [],\n        posts: []\n      }\n    }\n\n    case actionsTypes.USERS_SET_SHOWING: {\n      return {\n        ...state,\n        showing: payload.type\n      }\n    }\n\n    \n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer","import { combineReducers } from 'redux'\nimport uiReducer from './ui'\nimport usersReducer from './users'\n\nexport default combineReducers({\n  ui: uiReducer,\n  users: usersReducer\n})","import { all } from 'redux-saga/effects'\n\n// const delay = (ms) => new Promise(res => setTimeout(res, ms))\n\n// eslint-disable-next-line require-yield\n// export function* helloSaga() {\n//   console.log('Hello Sagas!')\n// }\n\n// export function* incrementAsync() {\n//   yield call(delay, 1000)\n//   yield put({ type: 'INCREMENT' })\n// }\n\n// export function* watchIncrementAsync() {\n//   yield takeEvery('INCREMENT_ASYNC', incrementAsync)\n// }\n\nexport default function* uiSaga() {\n  yield all([\n    // watchIncrementAsync()\n  ])\n}","import Axios from 'axios'\n\nexport const users = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/users'\n})    ","import Axios from 'axios'\n\nexport const posts = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts'\n})    ","import Axios from 'axios'\n\nexport const albums = Axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/albums'\n})    ","import { albums, posts, users } from '../axios'\n\nclass UserService {\n\n  static getAllusers() {\n    return users.get().then(({ data }) => data)\n  }\n\n  static getUserPosts(id) {\n    return posts.get(`?userId=${id}`).then(({ data }) => data)\n  }\n\n  static getUserAlbums(id) {\n    return albums.get(`?userId=${id}`).then(({ data }) => data)\n  }\n}\n\nexport default UserService","import {\n  USERS_GET_USER_ALBUMS_REQUEST,\n  USERS_GET_USER_POSTS_REQUEST,\n  getAllUsersFail,\n  getAllUsersSuccess,\n  usersGetUserAlbumsFail,\n  usersGetUserAlbumsSuccess,\n  usersGetUserPostsFail,\n  usersGetUserPostsSuccess\n} from '../actions/users'\nimport {\n  all,\n  call,\n  cancel,\n  fork,\n  put,\n  select,\n  take,\n  takeEvery\n} from 'redux-saga/effects'\nimport { getAlbums, getPosts } from '../selectors/users'\n\nimport UserService from '../../services/user.service'\n\nexport function* getUsers() {\n  try {\n    const users = yield call(UserService.getAllusers)\n    yield put(getAllUsersSuccess(users))\n  } catch (error) {\n    yield put(getAllUsersFail())\n  }\n}\n\nexport function* userPosts(id) {\n  try {\n    const posts = yield call(UserService.getUserPosts, id)\n    yield put(usersGetUserPostsSuccess(posts))\n  } catch (error) {\n    console.error(error)\n    yield put(usersGetUserPostsFail())\n  }\n}\n\nexport function* userAlbums(id) {\n  try {\n    const albums = yield call(UserService.getUserAlbums, id)\n    yield put(usersGetUserAlbumsSuccess(albums))\n  } catch (error) {\n    console.error(error)\n    yield put(usersGetUserAlbumsFail())\n  }\n}\n\nexport function* getUserPosts(action) {\n  const existedPosts= yield select(getPosts)\n\n  if (existedPosts.length) {\n    return yield put(usersGetUserPostsSuccess(existedPosts))\n  }\n\n  const {id} = action.payload\n  const posts = yield fork(userPosts, id)\n  yield take(USERS_GET_USER_ALBUMS_REQUEST)\n  yield cancel(posts)\n}\n\nexport function* getUserAlbums(action) {\n  const existedAlbums = yield select(getAlbums)\n\n  if (existedAlbums.length) {\n    return yield put(usersGetUserAlbumsSuccess(existedAlbums))\n  }\n\n  const {id} = action.payload\n  const albums = yield fork(userAlbums, id)\n  yield take(USERS_GET_USER_POSTS_REQUEST)\n  yield cancel(albums)\n}\n\nexport default function* usersSaga() {\n  yield all([\n    yield takeEvery('USERS_GET_ALL_USERS_REQUEST', getUsers),\n    yield takeEvery('USERS_GET_USER_POSTS_REQUEST', getUserPosts),\n    yield takeEvery('USERS_GET_USER_ALBUMS_REQUEST', getUserAlbums)\n  ])\n}","import { all } from 'redux-saga/effects'\nimport uiSaga from './ui'\nimport usersSaga from './users'\n\nexport default function* rootSaga() {\n  yield all([\n    uiSaga(),\n    usersSaga()\n  ])\n}","import { applyMiddleware, createStore } from 'redux'\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './store/reducers'\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware]\n\n  return {\n    store: createStore(\n      reducer,\n      initialState,\n      composeWithDevTools(\n        applyMiddleware(...middlewares)\n      )\n    ),\n    sagaMiddleware\n  }\n}","import 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './configureStore'\nimport rootSaga from './store/sagas'\n\nconst { store, sagaMiddleware } = configureStore()\n\nsagaMiddleware.run(rootSaga)\n\nconst AppBundle = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  AppBundle\n  , document.getElementById('root'));\n"],"sourceRoot":""}